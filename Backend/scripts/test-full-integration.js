const axios = require('axios');

const API_BASE_URL = 'http://localhost:3001/api';

async function testFullIntegration() {
  console.log('üß™ Test d\'int√©gration compl√®te Frontend-Backend\n');

  try {
    // 1. Test de sant√© du serveur
    console.log('1Ô∏è‚É£ Test de sant√© du serveur...');
    const healthResponse = await axios.get(`${API_BASE_URL}/health`);
    console.log('‚úÖ Serveur en ligne:', healthResponse.data.message);

    // 2. Test des statistiques
    console.log('\n2Ô∏è‚É£ Test des statistiques...');
    const statsResponse = await axios.get(`${API_BASE_URL}/stats/general`);
    console.log('‚úÖ Statistiques r√©cup√©r√©es:', statsResponse.data.data);

    // 3. Test des locations
    console.log('\n3Ô∏è‚É£ Test des locations...');
    const locationsResponse = await axios.get(`${API_BASE_URL}/locations`);
    console.log(`‚úÖ ${locationsResponse.data.locations.length} locations trouv√©es`);

    // 4. Test des services
    console.log('\n4Ô∏è‚É£ Test des services...');
    const servicesResponse = await axios.get(`${API_BASE_URL}/services`);
    console.log(`‚úÖ ${servicesResponse.data.services.length} services trouv√©s`);

    // 5. Test des barbers
    console.log('\n5Ô∏è‚É£ Test des barbers...');
    const barbersResponse = await axios.get(`${API_BASE_URL}/barbers`);
    console.log(`‚úÖ ${barbersResponse.data.barbers.length} barbers trouv√©s`);

    // 6. Test des cat√©gories de services
    console.log('\n6Ô∏è‚É£ Test des cat√©gories...');
    const categoriesResponse = await axios.get(`${API_BASE_URL}/services/categories`);
    console.log('‚úÖ Cat√©gories:', categoriesResponse.data.categories);

    // 7. Test de disponibilit√© des r√©servations
    console.log('\n7Ô∏è‚É£ Test de disponibilit√©...');
    const availabilityResponse = await axios.get(`${API_BASE_URL}/bookings/availability`, {
      params: {
        locationId: locationsResponse.data.locations[0].id,
        date: new Date().toISOString().split('T')[0]
      }
    });
    console.log('‚úÖ Disponibilit√© r√©cup√©r√©e');

    console.log('\nüéâ Tous les tests sont pass√©s avec succ√®s !');
    console.log('\nüìä R√©sum√© des donn√©es:');
    console.log(`   - ${statsResponse.data.data.totalLocations} salons`);
    console.log(`   - ${statsResponse.data.data.totalBarbers} coiffeurs`);
    console.log(`   - ${statsResponse.data.data.totalServices} services`);
    console.log(`   - ${statsResponse.data.data.totalBookings} r√©servations`);
    console.log(`   - ${statsResponse.data.data.totalRevenue}‚Ç¨ de chiffre d'affaires`);

  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error.message);
    if (error.response) {
      console.error('   D√©tails:', error.response.data);
    }
  }
}

testFullIntegration();
